import { Context } from '@actions/github/lib/context';
import { Logger } from '@technote-space/github-action-helper';
export declare type ActionDetails = {
    actionName: string;
    actionOwner: string;
    actionRepo: string;
    targetEvents?: {
        [key: string]: string | Function | (string | Function)[];
    };
    installPackages?: string[];
    devInstallPackages?: string[];
    globalInstallPackages?: string[];
    executeCommands?: string[];
    commitMessage?: string;
    commitName?: string;
    commitEmail?: string;
    prBranchPrefix?: string;
    prBranchName?: string;
    prBranchPrefixForDefaultBranch?: string;
    prBranchNameForDefaultBranch?: string;
    prTitle?: string;
    prBody?: string;
    prVariables?: string[];
    prDateFormats?: string[];
    prCloseMessage?: string;
    filterGitStatus?: string;
    filterExtensions?: string[];
    targetBranchPrefix?: string;
    deletePackage?: boolean;
    includeLabels?: string[];
    checkDefaultBranch?: boolean;
};
export declare type MainArguments = ActionDetails & {
    logger?: Logger;
    notTargetEventMessage?: string;
    rootDir?: string;
    context?: Context;
};
export declare type ActionContext = {
    actionContext: Context;
    actionDetail: ActionDetails;
    defaultBranch: string;
};
export declare type ProcessResult = {
    result: 'succeeded' | 'failed' | 'skipped';
    detail: string;
    branch: string;
};
export declare type PullsParams = {
    number: number;
    id: number;
    head: {
        ref: string;
    };
    base: {
        repo: {
            name: string;
            owner: {
                login: string;
            };
        };
        ref: string;
    };
    title: string;
    'html_url': string;
};
